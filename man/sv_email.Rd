% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rules.R
\name{sv_email}
\alias{sv_email}
\title{Validate that a field contains an email address}
\usage{
sv_email(
  message = "Not a valid email address",
  allow_multiple = FALSE,
  allow_na = FALSE
)
}
\arguments{
\item{message}{The validation error message to use if a value doesn't match a
regex pattern for email address detection.}

\item{allow_multiple}{If \code{FALSE} (the default), then the length of the input
vector must be exactly one; if \code{TRUE}, then any length is allowed
(including a length of zero; use \code{\link[=sv_required]{sv_required()}} if one or more values
should be required).}

\item{allow_na}{If \code{FALSE} (the default for both options), then any
\code{NA} or \code{NaN} element will cause validation to fail.}
}
\value{
A function suitable for using as an
\code{\link[=InputValidator]{InputValidator$add_rule()}} rule.
}
\description{
A validation function, suitable for use with \code{InputValidator$add_rule()},
that checks whether an input value looks like a valid email address.
}
\examples{
# Ignore withReactiveDomain(), it's just required to get this example to run
# outside of Shiny
shiny::withReactiveDomain(shiny::MockShinySession$new(), {

  iv <- InputValidator$new()

  # An email is not required, but if present, it must be valid
  iv$add_rule("email", sv_optional())
  iv$add_rule("email", sv_email())
})

}
